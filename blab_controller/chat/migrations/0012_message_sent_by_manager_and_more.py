# Generated by Django 4.1.7 on 2023-03-23 13:24

import chat.models
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('chat', '0011_message_command'),
    ]

    operations = [
        migrations.AddField(
            model_name='message',
            name='sent_by_manager',
            field=models.BooleanField(default=False, help_text='whether the message was sent by the manager bot', verbose_name='sent by manager'),
        ),
        migrations.AlterField(
            model_name='conversation',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='the instant when the conversation started', verbose_name='time'),
        ),
        migrations.AlterField(
            model_name='conversation',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, help_text='the conversation id, with 32 characters', primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='conversation',
            name='name',
            field=models.CharField(blank=True, help_text='the conversation name, which can be blank', max_length=50, null=True, verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='message',
            name='additional_metadata',
            field=models.JSONField(blank=True, default=dict, help_text='additional metadata about the message (usually system messages, with the key `participant_id`)', verbose_name='additional metadata'),
        ),
        migrations.AlterField(
            model_name='message',
            name='approval_status',
            field=models.IntegerField(choices=[(0, 'not approved'), (1, 'automatically approved'), (2, 'approved by bot manager')], default=0, help_text='the approval status of the message', verbose_name='approval status'),
        ),
        migrations.AlterField(
            model_name='message',
            name='command',
            field=models.CharField(blank=True, help_text='a JSON-encoded command (only in messages sent by manager bots)', max_length=1000, verbose_name='command'),
        ),
        migrations.AlterField(
            model_name='message',
            name='conversation',
            field=models.ForeignKey(help_text='the conversation to which the message belongs', on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='chat.conversation', verbose_name='message'),
        ),
        migrations.AlterField(
            model_name='message',
            name='external_file_url',
            field=models.URLField(blank=True, help_text='external URL of the attached file (only set for files that are hosted externally)', max_length=1000, verbose_name='external file URL'),
        ),
        migrations.AlterField(
            model_name='message',
            name='file',
            field=models.FileField(blank=True, help_text='the file attached to the message (not set for files that are hosted externally)', max_length=256, null=True, upload_to=chat.models._attachment_name, verbose_name='attached file'),
        ),
        migrations.AlterField(
            model_name='message',
            name='file_key',
            field=models.UUIDField(default=uuid.uuid4, editable=False, help_text='key required to access the file (not set for files that are hosted externally)'),
        ),
        migrations.AlterField(
            model_name='message',
            name='file_size',
            field=models.PositiveBigIntegerField(blank=True, help_text='file size in bytes (usually not set for files that are hosted externally)', null=True),
        ),
        migrations.AlterField(
            model_name='message',
            name='local_id',
            field=models.CharField(blank=True, help_text='local message id, defined by the sender', max_length=32, null=True, verbose_name='local message id'),
        ),
        migrations.AlterField(
            model_name='message',
            name='m_id',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text='the 32-character message id', unique=True),
        ),
        migrations.AlterField(
            model_name='message',
            name='mime_type',
            field=models.CharField(blank=True, help_text='MIME type of the file attached to the message', max_length=256, null=True, verbose_name='MIME type'),
        ),
        migrations.AlterField(
            model_name='message',
            name='original_file_name',
            field=models.CharField(blank=True, help_text='original name of the file attached to the message (it may not be set for files that are hosted externally)', max_length=100, null=True, verbose_name='original file name'),
        ),
        migrations.AlterField(
            model_name='message',
            name='quoted_message',
            field=models.ForeignKey(blank=True, help_text='the message quoted by this message, if any', null=True, on_delete=django.db.models.deletion.SET_NULL, to='chat.message', verbose_name='quoted message'),
        ),
        migrations.AlterField(
            model_name='message',
            name='sender',
            field=models.ForeignKey(blank=True, help_text='who sent this message (NULL for system messages)', null=True, on_delete=django.db.models.deletion.PROTECT, to='chat.participant', verbose_name='sender'),
        ),
        migrations.AlterField(
            model_name='message',
            name='text',
            field=models.CharField(blank=True, help_text='the text contents of the message', max_length=4000, verbose_name='text'),
        ),
        migrations.AlterField(
            model_name='message',
            name='time',
            field=models.DateTimeField(auto_now_add=True, help_text='when the message was sent or the event occurred', verbose_name='time'),
        ),
        migrations.AlterField(
            model_name='message',
            name='type',
            field=models.CharField(choices=[('S', 'System'), ('T', 'Text'), ('V', 'Voice'), ('a', 'Audio'), ('v', 'Video'), ('i', 'Image'), ('A', 'Attachment')], help_text='the type of the message (`S` = system, `T` = text, `V` = voice, `a` = audio, `v` = video, `i` = image, `A` = arbitrary attachment) ', max_length=1),
        ),
        migrations.AlterField(
            model_name='messageoption',
            name='message',
            field=models.ForeignKey(help_text='the message to which the option belongs', on_delete=django.db.models.deletion.CASCADE, related_name='options', to='chat.message', verbose_name='message'),
        ),
        migrations.AlterField(
            model_name='messageoption',
            name='option_text',
            field=models.CharField(blank=True, help_text='text of the option', max_length=4000, verbose_name='option text'),
        ),
        migrations.AlterField(
            model_name='messageoption',
            name='position',
            field=models.PositiveSmallIntegerField(help_text='the position of the option', verbose_name='option position'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='conversation',
            field=models.ForeignKey(help_text='the conversation to which the participant belongs', on_delete=django.db.models.deletion.PROTECT, related_name='participants', to='chat.conversation', verbose_name='participants'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, help_text='the participant id, with 32 characters', primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='participant',
            name='name',
            field=models.CharField(help_text='name of the participant', max_length=50, verbose_name='participant'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='type',
            field=models.CharField(choices=[('H', 'human'), ('B', 'bot')], default=None, help_text='the participant type (`H` = human, `B` = bot)', max_length=1, verbose_name='type'),
        ),
    ]
